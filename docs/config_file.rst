.. _config_file:

zoe.conf config file documentation
==================================

The ``zoe.conf`` file is in INI format and is divided in sections. A common section contains options
required by all of Zoe's components, while the other sections are specific for each component.

A sample file can be generated by uusing the ``zoe.py write-config`` command.

The following locations are searched for a file names ``zoe.conf``:
* working path (.)
* /etc/zoe

common
------

* ``object_storage_url``: the URL of where Zoe's object server can be reached by software running in the

Swarm containers. Usually it contains the same information as the ``[zoe_storage]`` section, but it really depends on your network configuration.

zoe_scheduler
-------------

* ``swarm_manager_url``: URL of the Swarm manager
* ``docker_private_registry``: <IP>:<PORT> of the private docker registry, if you don't have one, leave empty
* ``status_refresh_interval``: How often internal statistics should be refreshed, in seconds
* ``check_terminated_interval``: How ofter terminated cluster should be cleaned up, in seconds
* ``db_connect``: SQLAlchemy database URL
* ``ipc_listen_address``: listen address for the internal IPC server
* ``ipc_listen_port``: listen port for the internal IPC server
* ``ddns_keyfile``: key file for the DDNS protocol
* ``ddns_server``: DNS server where DDNS queries would be sent
* ``ddns_domain``: domain used by the swarm containers, as configured in the DNS server

zoe_client
----------

* ``db_connect``: SQLAlchemy database URL
* ``scheduler_ipc_address``: address of the IPC server (see above)
* ``scheduler_ipc_port``: port of the IPC server (see above)

zoe_web
-------

* ``smtp_*``: settings for an SMTP server that will be used to send notifications to users
* ``cookie_secret``: random string used to encrypt session cookies
* ``web_server_name``: name by which Zoe's web server will be visible from outside, used to generate URLs

zoe_storage
-----------

* ``storage_path``: where binary files (logs and applications) will be stored
* ``http_listen_address``: address where the HTTP server should bind to
* ``http_listen_port``: port where the HTTP server should bind to

