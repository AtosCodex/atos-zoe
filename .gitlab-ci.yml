stages:
  - static-test
  - build
  - integration-test
  - deploy
  - cleanup

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/pip-cache"
  POSTGRES_DB: zoe
  POSTGRES_USER: zoeuser
  POSTGRES_PASSWORD: zoepass
  ZOE_TEST_IMAGE: zoe-test:$CI_PIPELINE_ID
  ZOE_COMMON_OPTIONS: --debug --backend-swarm-url ${SWARM_URL} --deployment-name test${CI_BUILD_REF} --dbuser ${POSTGRES_USER} --dbhost postgres --dbport 5432 --dbname ${POSTGRES_DB} --dbpass ${POSTGRES_PASSWORD} --master-url tcp://localhost:4850 --auth-type text --listen-port 5100 --workspace-base-path /tmp

cache:
  paths:
    - "$CI_PROJECT_DIR/pip-cache"
  key: "$CI_PROJECT_ID"

pylint:
  stage: static-test
  image: python:3.4
  script:
    - pip install -U pip setuptools
    - pip install -r requirements.txt
    - pip install -r requirements_tests.txt
    - pylint *.py zoe_*

unittests:
  stage: static-test
  services:
    - postgres:9.3
  image: python:3.4
  script:
    - pip install -U pip setuptools
    - pip install -r requirements.txt
    - pip install -r requirements_tests.txt
    - pytest --ignore integration_tests --tb=short --cov-report=term --cov zoe_api --cov zoe_lib --cov zoe_master

docs-test:
  stage: static-test
  image: python:3.4
  script:
    - pip install -U pip setuptools
    - pip install -r requirements.txt
    - pip install -r requirements_tests.txt
    - doc8 docs/
    - sh ./build_docs.sh

images:
  image: docker:latest
  stage: build
  before_script:
    - mkdir -p /etc/docker/certs.d/$DOCKER_REGISTRY
    - cp /registry-ca.crt /etc/docker/certs.d/$DOCKER_REGISTRY/ca.crt
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script:
    - docker build --pull -t zoerepo/${ZOE_TEST_IMAGE} -f Dockerfile.test .
    - docker push zoerepo/${ZOE_TEST_IMAGE}

api-test:
  stage: integration-test
  services:
    - postgres:9.3
  image: zoerepo/${ZOE_TEST_IMAGE}
  script:
    - sh ./run_integration_tests.sh
  artifacts:
    paths:
      - integration_tests
    when: always

mirror-github:
  stage: deploy
  image: python:3.4
  before_script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh -A ubuntu@${STAGING_IP} /home/ubuntu/mirror-github.sh

docs:
  stage: deploy
  image: ${DOCKER_REGISTRY}/ci/${ZOE_TEST_IMAGE}
  before_script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - apt-get update -y && apt-get install rsync -y
  script:
    - sh ./build_docs.sh
    - rsync -avz docs/_build/html/ ubuntu@${STAGING_IP}:${WEB_STAGING_PATH}/docs
  environment:
    name: staging
  only:
    - master

zoe:
  stage: deploy
  image: ${DOCKER_REGISTRY}/ci/${ZOE_TEST_IMAGE}
  before_script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - apt-get update -y && apt-get install rsync -y
  script:
    - ssh ubuntu@${STAGING_IP} sudo chown -R ubuntu:ubuntu /srv/zoe/*
    - rsync -avz --delete . ubuntu@${STAGING_IP}:${ZOE_STAGING_PATH}
    - ssh ubuntu@${STAGING_IP} sudo pip install --upgrade -r /srv/zoe/requirements.txt
    - ssh ubuntu@${STAGING_IP} /home/ubuntu/clean_zoe_db.sh
    - ssh ubuntu@${STAGING_IP} sudo supervisorctl restart zoe-api
    - ssh ubuntu@${STAGING_IP} sudo supervisorctl restart zoe-master
  environment:
    name: staging
  only:
    - master

cleanup-images:
  image: docker:latest
  stage: cleanup
  before_script:
    - mkdir -p /etc/docker/certs.d/$DOCKER_REGISTRY
    - cp /registry-ca.crt /etc/docker/certs.d/$DOCKER_REGISTRY/ca.crt
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script:
    - docker rmi ${DOCKER_REGISTRY}/ci/${ZOE_TEST_IMAGE}
  only:
    - master
