stages:
  - static-test
  - build
  - integration-test
  - deploy
  - cleanup

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/pip-cache"
  POSTGRES_DB: zoe
  POSTGRES_USER: zoeuser
  POSTGRES_PASSWORD: zoepass
  ZOE_TEST_IMAGE: zoe-test:$CI_PIPELINE_ID
  ZOE_COMMON_OPTIONS: --debug --deployment-name test${CI_BUILD_REF} --dbuser ${POSTGRES_USER} --dbhost postgres --dbport 5432 --dbname ${POSTGRES_DB} --dbpass ${POSTGRES_PASSWORD} --master-url tcp://localhost:4850 --listen-port 5100 --workspace-base-path /tmp --overlay-network-name bridge

cache:
  paths:
    - "$CI_PROJECT_DIR/pip-cache"
  key: "$CI_PROJECT_ID"

pylint:
  stage: static-test
  image: python:3.5
  script:
    - pip install -U pip setuptools
    - pip install -r requirements.txt
    - pip install -r requirements_tests.txt
    - pylint *.py zoe_*

unittests:
  stage: static-test
  services:
    - postgres:9.5
  image: python:3.5
  script:
    - pip install -U pip setuptools
    - pip install -r requirements.txt
    - pip install -r requirements_tests.txt
    - pytest --ignore integration_tests --tb=short --cov-report=term --cov zoe_api --cov zoe_lib --cov zoe_master

docs-test:
  stage: static-test
  image: python:3.5
  script:
    - pip install -U pip setuptools
    - pip install -r requirements.txt
    - pip install -r requirements_tests.txt
    - doc8 docs/
    - sh ./build_docs.sh

images:
  image: docker:latest
  stage: build
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script:
    - docker build --pull -t zoerepo/${ZOE_TEST_IMAGE} -f Dockerfile.test .
    - docker push zoerepo/${ZOE_TEST_IMAGE}
    - docker rm -f nginx0-1-integration_test || true

api-test:
  stage: integration-test
  services:
    - postgres:9.5
  image: zoerepo/${ZOE_TEST_IMAGE}
  script:
    - bash ./run_integration_tests.sh
