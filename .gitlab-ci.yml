stages:
  - static-test
  - build
  - integration-test
  - deploy

variables:
  # Configure postgres service (https://hub.docker.com/_/postgres/)
  POSTGRES_DB: zoe
  POSTGRES_USER: zoeuser
  POSTGRES_PASSWORD: zoepass
  ZOE_TEST_IMAGE: zoe:$CI_BUILD_REF

#lint:
#  stage: static-test
#  image: python:3.4
#  script:
#    - pip install -r requirements.txt
#    - pip install -r requirements_tests.txt
#    - chmod 755 run_tests.sh && ./run_tests.sh

#SonarQube:
#  stage: static-test
#  image: zoerepo/sonar-scanner
#  variables:
#    SONAR_PROJECT_KEY: "zoe.$CI_BUILD_REF_NAME"
#    SONAR_PROJECT_NAME: "Zoe devel"
#    SONAR_PROJECT_VERSION: "$CI_BUILD_REF"
#    SONARQUBE_SERVER_URL: "$SONARQUBE_SERVER_URL"
#  script:
#    - /usr/bin/sonar-scanner-run.sh

images:
  image: docker:latest
  stage: build
  before_script:
    - mkdir -p /etc/docker/certs.d/$DOCKER_REGISTRY
    - cp /registry-ca.crt /etc/docker/certs.d/$DOCKER_REGISTRY/ca.crt
    - docker login -u gitlab-ci-runner -p $REGISTRY_PASSWORD $DOCKER_REGISTRY
  script:
    - sh ci/build_images.sh

api-test:
  stage: integration-test
  services:
    - postgres:9.3
  image: docker:latest
  script:
    - docker run $DOCKER_REGISTRY:ci/$ZOE_TEST_IMAGE
    -

docs:
  stage: deploy
  image: python:3.4
  script:
    - pip install sphinx
    - sh ./build_docs.sh

frontend:
  stage: deploy
  image: nodejs:latest
  script:
    - cd zoe_fe
    - ng build --env=prod --output-path=build/prod
